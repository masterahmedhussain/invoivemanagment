CREATE SCHEMA IF NOT EXISTS invoicemanagement;


SET NAMES 'UTF8MB4';

USE invoicemanagement;



DROP TABLE IF EXISTS Users;


CREATE TABLE Users (
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    password varchar(20) NOT NULL,
    phone VARCHAR(12) DEFAULT NULL,
    email VARCHAR(20) NOT NULL,
    title varchar(20) DEFAULT NULL
    enabled BOOLEAN DEFAULT FALSE,
    non_locked BOOLEAN DEFAULT FALSE,
    using_mfa BOOLEAN DEFAULT FALSE,
    CONSTRAINT UQ_Users_Email UNIQUE (email)
);

DROP TABLE IF EXISTS Roles;
 
CREATE TABLE Roles (
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(20) NOT NULL,
    permission VARCHAR(50) NOT NULL,
    CONSTRAINT UQ_Roles_Name UNIQUE (name)
);



DROP TABLE IF EXISTS UserRoles;
 
CREATE TABLE UserRoles (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (role_id) REFERENCES Roles (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT UQ_UserRoles_User_Id UNIQUE (user_id)
);

DROP TABLE IF EXISTS Events;
 
CREATE TABLE Events (
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(255) NOT NULL CHECK(type IN ('LOGIN_ATTEMPT', 'LOGIN_ATTEMPT_FAILURE')),
    description VARCHAR(255) NOT NULL,
    CONSTRAINT UQ_Events_Type UNIQUE (type)
);


DROP TABLE IF EXISTS UserEvents;
 
CREATE TABLE UserEvents (
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    device VARCHAR(255) NOT NULL,
    ip_address VARCHAR(255) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE RESTRICT ON UPDATE CASCADE

);


DROP TABLE IF EXISTS AccountVerfications;

CREATE TABLE AccountVerfications 
(
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    url VARCHAR(255) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UQ_AccountVerfications_User_Id UNIQUE (user_id),
    CONSTRAINT UQ_AccountVerfications_Url UNIQUE (url)
);


DROP TABLE IF EXISTS ResetPasswordVerfications;

CREATE TABLE ResetPasswordVerfications 
(
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    url VARCHAR(255) NOT NULL,
    expiration_date DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UQ_ResetPasswordVerfications_User_Id UNIQUE (user_id),
    CONSTRAINT UQ_ResetPasswordVerfications_Url UNIQUE (url)
);


DROP TABLE IF EXISTS TwoFactorVerfications;

CREATE TABLE TwoFactorVerfications 
(
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    code VARCHAR(255) NOT NULL,
    expiration_date DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UQ_TwoFactorVerfications_User_Id UNIQUE (user_id),
    CONSTRAINT UQ_TwoFactorVerfications_Code UNIQUE (code)
);
